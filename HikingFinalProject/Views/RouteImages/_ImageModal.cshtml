@using HikingFinalProject.DTOs.Routes
@model IEnumerable<RouteImageDto>

<!-- =========================
     Route Images Container
============================== -->
<div id="routeImagesContainer" data-route-id="@ViewBag.RouteID"></div>

<!-- =========================
     Add/Edit / Upload Image Modal
============================== -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form id="imageForm" enctype="multipart/form-data">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add / Upload Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="imageId" name="Id" value="0" />
                    <input type="hidden" id="imageRouteId" name="RouteID" value="@ViewBag.RouteID" />

                    <div class="mb-3">
                        <label for="imageFile" class="form-label">Select Image</label>
                        <input type="file" class="form-control" name="FileData" id="imageFile" />
                    </div>

                    <div class="mb-3">
                        <label for="caption" class="form-label">Caption</label>
                        <input type="text" class="form-control" name="Caption" id="caption" />
                    </div>

                    <div class="mb-3">
                        <label for="imageURL" class="form-label">Image URL (optional)</label>
                        <input type="url" class="form-control" name="ImageURL" id="imageURL" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveImageBtn">Save</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- =========================
     Delete Image Modal
============================== -->
<div class="modal fade" id="deleteImageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete this image?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const imageForm = document.getElementById("imageForm");
            const routeImagesContainer = document.getElementById("routeImagesContainer");
            let deleteId = 0;

            // ======================
            // Load Route Images
            // ======================
            async function loadRouteImages(routeId) {
                routeImagesContainer.innerHTML = "<p>Loading images...</p>";
                try {
                    const response = await fetch(`/RouteImages/GetByRoute/${routeId}`);
                    const images = await response.json();
                    if (!images || images.length === 0) {
                        routeImagesContainer.innerHTML = "<p>No images for this route yet.</p>";
                        return;
                    }

                    let html = '<div class="row">';
                    images.forEach(img => {
                        html += `
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <img src="${img.ImageURL || '#'}" class="card-img-top" alt="${img.Caption || ''}" />
                                    <div class="card-body">
                                        <p class="card-text">${img.Caption || ''}</p>
                                        <button class="btn btn-sm btn-primary" onclick='openImageModal(${routeId}, ${JSON.stringify(img)})'>Edit</button>
                                        <button class="btn btn-sm btn-danger" onclick="openDeleteModal(${img.Id})">Delete</button>
                                    </div>
                                </div>
                            </div>`;
                    });
                    html += '</div>';
                    routeImagesContainer.innerHTML = html;

                } catch (err) {
                    console.error(err);
                    routeImagesContainer.innerHTML = "<p>Failed to load images.</p>";
                }
            }

            const routeId = routeImagesContainer.dataset.routeId;
            if (routeId) loadRouteImages(routeId);

            // ======================
            // Handle Add/Edit Image
            // ======================
            if (imageForm) {
                imageForm.addEventListener("submit", async (e) => {
                    e.preventDefault();
                    const formData = new FormData(imageForm);
                    try {
                        const res = await fetch(`/RouteImages/Save/${routeId}`, { method: "POST", body: formData });
                        const result = await res.json();
                        if (result.success) {
                            loadRouteImages(routeId);
                            bootstrap.Modal.getInstance(document.getElementById("imageModal")).hide();
                            imageForm.reset();
                        } else {
                            alert("Failed to save image: " + result.message);
                        }
                    } catch (err) { console.error(err); }
                });
            }

            // ======================
            // Open Add/Edit Modal
            // ======================
            window.openImageModal = function(routeId, image = null) {
                document.getElementById("imageRouteId").value = routeId;
                document.getElementById("imageId").value = image?.Id || 0;
                document.getElementById("caption").value = image?.Caption || "";
                document.getElementById("imageURL").value = image?.ImageURL || "";
                new bootstrap.Modal(document.getElementById("imageModal")).show();
            }

            // ======================
            // Handle Delete Image
            // ======================
            window.openDeleteModal = function(imageId) {
                deleteId = imageId;
                new bootstrap.Modal(document.getElementById("deleteImageModal")).show();
            }

            document.getElementById("confirmDeleteBtn").addEventListener("click", async () => {
                try {
                    const res = await fetch(`/RouteImages/Delete/${deleteId}`, { method: "POST" });
                    const result = await res.json();
                    if (result.success) {
                        loadRouteImages(routeId);
                        bootstrap.Modal.getInstance(document.getElementById("deleteImageModal")).hide();
                    } else {
                        alert("Failed to delete image: " + result.message);
                    }
                } catch (err) { console.error(err); }
            });
        });
    </script>
}

